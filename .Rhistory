Locon <- subset(Loco, idents = c(1,3,4,8,9,10,11,12))
RunPCA(Locon, npcs = 30, verbose = FALSE) %>%
RunUMAP(dims = 1:30, verbose = FALSE) %>%
FindNeighbors(reduction = "pca", dims = 1:30, n.trees = 200, annoy.metric = "cosine", verbose = FALSE) %>%
FindClusters(resolution = 0.3, algorithm = 1, verbose = FALSE)
DimHeatmap(Locon, dims = 1:20, cells = 500, balanced = TRUE)
DimPlot(Locon, reduction = "umap")
Locon <- RunTSNE(Locon, dims = 1:30, verbose = FALSE)
DimPlot(Locon, reduction = "tsne", label = TRUE)
Locon
Loco
table(lc.combined$id)
library(Seurat)
library(SeuratDisk)
library(patchwork)
library(magrittr)
library(dplyr)
lc1 <- LoadH5Seurat("data/Locus_Coruleus1.h5Seurat")
lc2 <- LoadH5Seurat("data/Locus_Coruleus.h5Seurat")
lc1$id <- "lc1"
lc2$id <- "lc2"
lc.list <- list(lc1, lc2)
features <- SelectIntegrationFeatures(object.list = lc.list, nfeatures = 10000)
lc.list <- PrepSCTIntegration(object.list = lc.list, anchor.features = features)
lc.anchors <- FindIntegrationAnchors(object.list = lc.list, anchor.features = features, normalization.method = "SCT")
lc.combined <- IntegrateData(anchorset = lc.anchors, normalization.method = "SCT")
# original unmodified data still resides in the 'RNA' assay
DefaultAssay(lc.combined) <- "integrated"
# Run the standard workflow for visualization and clustering
lc.combined <- RunPCA(lc.combined, npcs = 30, verbose = FALSE)
lc.combined <- RunUMAP(lc.combined, reduction = "pca", dims = 1:30)
lc.combined <- FindNeighbors(lc.combined, reduction = "pca", dims = 1:30)
lc.combined <- FindClusters(lc.combined,  resolution = 4)
# Visualization
p1 <- DimPlot(lc.combined, reduction = "umap", group.by = "id", )
p2 <- DimPlot(lc.combined, reduction = "umap", label = TRUE, repel = TRUE)
p1 + p2
table(lc.combined$id)
DimPlot(lc.combined, reduction = "umap", split.by = "id")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Gal", "Grp", "Sst", "Slc17a6", "Pdyn", "Cartpt", "Bdnf", "Th", "Slc18a2", "Dbh", "Gad1", "Slc6a2"), order = T, , max.cutoff = "q80")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Hcrtr1", "Sstr2", "Calcr", "Galr1"), order = T, max.cutoff = "q80")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Slc17a6", "Slc17a7", "Gad2", "Gad1", "Npy", "Galr1", "Scrt2"), order = T, max.cutoff = "q80")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "SCT"
FeaturePlot(lc.combined, slot = "scale.data", features = c("Hcrtr1", "Sstr2", "Calcr", "Galr1", "Scrt2"), order = T)
lc.combined1 <- PrepSCTFindMarkers(lc.combined)
nephr.markers.std <- FindAllMarkers(lc.combined1, assay = "SCT", verbose = FALSE)
nephr.markers.ROC <- FindAllMarkers(lc.combined1, assay = "SCT", test.use = "roc", verbose = FALSE)
nephr.markers <- FindConservedMarkers(lc.combined1, assay = "SCT",
ident.1 = "1", grouping.var = "id",
verbose = FALSE)
head(nephr.markers, 10)
plots <- VlnPlot(lc.combined1, features = rownames(nephr.markers)[1:10], split.by = "id",
group.by = "seurat_clusters", pt.size = 0, combine = FALSE)
wrap_plots(plots = plots, ncol = 1)
FeaturePlot(lc.combined1,
features = rownames(nephr.markers)[1:10],
split.by = "id", max.cutoff = 3,
order = FALSE, # here it's more convincing
cols = c("#C0C9D1", "#801C29"))
nephr.markers.std %>%
group_by(cluster) %>%
top_n(n = 10, wt = avg_log2FC) -> top10
DoHeatmap(lc.combined1, features = top10$gene) + NoLegend()
nephr.markers.ROC %>%
group_by(cluster) %>%
top_n(n = 10, wt = power) -> top10
DoHeatmap(lc.combined1, features = top10$gene) + NoLegend()
DefaultAssay(lc.combined) <- "integrated"
lc.combinedTH <- subset(lc.combined, idents = 1)
lc.combinedTH <- FindNeighbors(lc.combinedTH, reduction = "pca", dims = 1:30, n.trees = 200, annoy.metric = "cosine", verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 1, verbose = FALSE) %>%
RunUMAP( dims = 1:30, verbose = FALSE)
DimHeatmap(lc.combinedTH, dims = 1:20, cells = 500, balanced = TRUE)
FeaturePlot(lc.combinedTH, slot = "scale.data", features = c("Phox2a", "Phox2b", "Eya1", "Eya2"), order = T)
DimPlot(lc.combinedTH, reduction = "umap")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combinedTH) <- "SCT"
FeaturePlot(lc.combinedTH, slot = "scale.data", features = c("Gal", "Grp", "Sst", "Slc17a6", "Pdyn", "Cartpt", "Bdnf", "Th", "Slc18a2", "Dbh", "Gad1", "Slc6a2", "Calca", "Calcr", "Phox2a", "Phox2b", "Eya1", "Eya2", "Galr1"), order = T, , max.cutoff = "q80")
DefaultAssay(lc.combined) <- "RNA"
lc.combinedTHa <- subset(lc.combined, idents = 1)
lc.combinedTHa <- DietSeurat(lc.combinedTHa, assays = "RNA")
lc.combinedTHa <- SCTransform(lc.combinedTHa, return.only.var.genes = FALSE, verbose = FALSE) %>%
RunPCA(verbose = FALSE) %>%
RunUMAP(dims = 1:20, verbose = FALSE) %>%
FindNeighbors(dims = 1:30, verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 1, verbose = FALSE)
DimHeatmap(lc.combinedTHa, dims = 1:20, cells = 500, balanced = TRUE)
DimPlot(lc.combinedTHa, reduction = "umap", split.by = "id")
(DimPlot(lc.combinedTHa, reduction = "umap", group.by = "integrated_snn_res.4")) + (DimPlot(lc.combinedTHa, reduction = "umap"))
FeaturePlot(lc.combinedTHa, slot = "scale.data", features = c("Gal", "Grp", "Sst", "Slc17a6", "Pdyn", "Cartpt", "Bdnf", "Th", "Slc18a2", "Dbh", "Gad1", "Slc6a2", "Calca", "Calcr", "Phox2a", "Phox2b", "Eya1", "Eya2", "Galr1"), order = T)
Idents(lc.combinedTHa) <- "integrated_snn_res.4"
markersTHvsTH <- FindAllMarkers(lc.combinedTHa)
markersTHvsTH %>%
group_by(cluster) %>%
slice_max(n = 30, order_by = avg_log2FC)
markersTHvsTH %>%
group_by(cluster) %>%
top_n(n = 10, wt = avg_log2FC) -> top10
library(Seurat)
library(SeuratDisk)
library(patchwork)
library(magrittr)
library(dplyr)
lc1 <- LoadH5Seurat("data/Locus_Coruleus1.h5Seurat")
lc2 <- LoadH5Seurat("data/Locus_Coruleus.h5Seurat")
lc1$id <- "lc1"
lc2$id <- "lc2"
lc.list <- list(lc1, lc2)
features <- SelectIntegrationFeatures(object.list = lc.list, nfeatures = 10000)
lc.list <- PrepSCTIntegration(object.list = lc.list, anchor.features = features)
lc.anchors <- FindIntegrationAnchors(object.list = lc.list, anchor.features = features, normalization.method = "SCT")
lc.combined <- IntegrateData(anchorset = lc.anchors, normalization.method = "SCT")
VlnPlot(lc.combined, features = "nFeature_RNA")
# original unmodified data still resides in the 'RNA' assay
DefaultAssay(lc.combined) <- "integrated"
# Run the standard workflow for visualization and clustering
lc.combined <- RunPCA(lc.combined, npcs = 30, verbose = FALSE)
lc.combined <- RunUMAP(lc.combined, reduction = "pca", dims = 1:30)
lc.combined <- FindNeighbors(lc.combined, reduction = "pca", dims = 1:30)
lc.combined <- FindClusters(lc.combined,  resolution = 4)
DefaultAssay(lc.combined) <- "integrated"
lc.combined %<>% subset(idents = c(0, 17), invert = TRUE)
RunPCA(lc.combined, npcs = 30, verbose = FALSE) %>%
RunUMAP( dims = 1:30, verbose = FALSE)
# Visualization
p1 <- DimPlot(lc.combined, reduction = "umap", group.by = "id")
p2 <- DimPlot(lc.combined, reduction = "umap", label = TRUE, repel = TRUE)
p1 + p2
DimPlot(lc.combined, reduction = "umap", split.by = "id")
DimPlot(lc.combined, reduction = "umap", pt.size = 2, label = TRUE)
Neuron_clusters <- DimPlot(lc.combined, reduction = "umap", pt.size = 2.3, label = TRUE)
cowplot::save_plot(filename = 'DimPlot_neurons.pdf',
plot = Neuron_clusters,
base_height = 7,
base_asp = 1.1)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Gal", "Grp", "Sst", "Slc17a6", "Pdyn", "Cartpt", "Bdnf", "Th", "Slc18a2", "Dbh", "Gad1", "Slc6a2", "Vip", "Npy", "Cck", "Crh"), order = T, pt.size = 1, max.cutoff = "q75")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Th", "Dbh", "Gal", "Grp", "Pdyn", "Cartpt", "Bdnf", "Npy", "Cck", "Sst", "Crh", "Vip"), order = T, cols = c(rgb(0.9, 0.9, 0.9, alpha = 0.5), rgb(0, 0, 1, alpha = 0.7)), pt.size = 1.5, max.cutoff = "q75")
FP_peptides <- FeaturePlot(lc.combined, features = c("Th", "Dbh", "Gal", "Grp", "Pdyn", "Cartpt", "Bdnf", "Npy", "Cck", "Sst", "Crh", "Vip"), order = T, cols = c(rgb(0.9, 0.9, 0.9, alpha = 0.5), rgb(0, 0, 1, alpha = 0.7)), pt.size = 1.5, max.cutoff = "q75")
cowplot::save_plot(filename = 'FeaturePlot_NP_neurons.pdf',
plot = FP_peptides,
base_height = 7,
base_asp = 1.6)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Eya1", "Eya2", "Gal", "Grp", "Pdyn", "Cartpt","Npy", "Npy1r", "Hcrtr1", "Phox2a", "Phox2b", "Cck", "Sst", "Crh", "Vip", "Npy2r","Npy5r", "Galr1"), order = T, cols = c(rgb(0.9, 0.9, 0.9, alpha = 0.5), rgb(0, 0, 1, alpha = 0.7)), pt.size = 1.5, ncol = 9, max.cutoff = "q80")
FP_peptides <- FeaturePlot(lc.combined, features = c("Eya1", "Eya2", "Gal", "Grp", "Pdyn", "Cartpt","Npy", "Npy1r", "Hcrtr1", "Phox2a", "Phox2b", "Cck", "Sst", "Crh", "Vip", "Npy2r","Npy5r", "Galr1"), order = T, cols = c(rgb(0.9, 0.9, 0.9, alpha = 0.5), rgb(0, 0, 1, alpha = 0.7)), pt.size = 2, ncol = 9, max.cutoff = "q80")
cowplot::save_plot(filename = 'FeaturePlot_NP_neurons2.pdf',
plot = FP_peptides,
base_height = 7,
base_asp = 4.5)
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Xist", "Tsix", "Eif2s3y", "Ddx3y", "Uty", "Kdm5d"), order = T, pt.size = 2, max.cutoff = "q75")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Tubb3", "Slc6a2", "Slc18a2", "Snap25", "Dbh", "Slc32a1", "Stmn2", "Gad1", "Gad2", "Ndrg4", "Slc17a6", "Slc17a7"), order = T, pt.size = 1.5, raster = FALSE, cols = c(rgb(0.9, 0.9, 0.9, alpha = 0.5), rgb(0, 0, 1, alpha = 0.7)), ncol = 3, max.cutoff = "q80")
FP_NT <- FeaturePlot(lc.combined, features = c("Tubb3", "Slc6a2", "Slc18a2", "Snap25", "Dbh", "Slc32a1", "Stmn2", "Gad1", "Gad2", "Ndrg4", "Slc17a6", "Slc17a7"), order = T, pt.size = 1.5, raster = FALSE, cols = c(rgb(0.9, 0.9, 0.9, alpha = 0.5), rgb(0, 0, 1, alpha = 0.7)), ncol = 3, max.cutoff = "q80")
cowplot::save_plot(filename = 'FeaturePlot_NT_neurons.pdf',
plot = FP_NT,
base_height = 7,
base_asp = 1.2)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Hcrtr1", "Sstr2", "Calcr", "Galr1"), order = T, max.cutoff = "q80")
MarkersNPR <- FeaturePlot(lc.combined, features = c("Hcrtr1", "Sstr2", "Calcr", "Galr1"), order = T,pt.size = 2, max.cutoff = "q80")
cowplot::save_plot(filename = 'FeaturePlot_MarkersNPR.pdf',
plot = MarkersNPR,
base_height = 7,
base_asp = 1.2)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Phox2a", "Phox2b", "Eya1", "Eya2"), order = T, pt.size = 2, max.cutoff = "q75")
TF <- FeaturePlot(lc.combined, features = c("Phox2a", "Phox2b", "Eya1", "Eya2"), order = T,pt.size = 2, max.cutoff = "q80")
cowplot::save_plot(filename = 'FeaturePlot_TF.pdf',
plot = TF,
base_height = 7,
base_asp = 1.2)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Calcrl", "Ddc", "Ramp1", "Ramp2", "Ramp3", "Hcrtr2", "Cckbr", "Crhr1", "Crhr2", "Ghrhr", "Gipr", "Gip", "Kiss1r", "Lepr", "Mc4r", "Mchr1", "Mchr2", "Npy1r", "Npy2r", "Npy4r", "Npy5r", "Ntsr1", "Ntsr2", "Oprd1", "Oprk1", "Oprl1", "Oprm1", "Oxtr", "Sctr", "Sstr1", "Sstr2", "Sstr3", "Sstr5", "Tacr1","Tacr2", "Tacr3", "Trhr", "Vipr1", "Vipr2"), order = T, pt.size = 2, ncol = 6, max.cutoff = "q80")
genestomas <- FeaturePlot(lc.combined, features = c("Calcrl", "Ddc", "Ramp1", "Ramp2", "Ramp3", "Hcrtr2", "Cckbr", "Crhr1", "Crhr2", "Ghrhr", "Gipr", "Gip", "Kiss1r", "Lepr", "Mc4r", "Mchr1", "Mchr2", "Npy1r", "Npy2r", "Npy4r", "Npy5r", "Ntsr1", "Ntsr2", "Oprd1", "Oprk1", "Oprl1", "Oprm1", "Oxtr", "Sctr", "Sstr1", "Sstr2", "Sstr3", "Sstr5", "Tacr1","Tacr2", "Tacr3", "Trhr", "Vipr1", "Vipr2"), order = T,pt.size = 1, ncol = 6, max.cutoff = "q80")
cowplot::save_plot(filename = 'FeaturePlot_genes_tomas.pdf',
plot = genestomas,
base_height = 10,
base_asp = 1.6)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(lc.combined, features = c("Gal", "Calca", "Hcrt", "Cck", "Crh", "Ghrhr", "Kiss1", "Pomc", "Pmch", "Npy", "Nts", "Penk", "Pdyn", "Pnoc", "Oxt", "Sst", "Grp", "Cartpt", "Tac1","Tac2", "Tac3", "Trh", "Vip", "Avp", "Rln1", "Qrfp", "Npvf", "Adcyap1", "Bdnf", "Nms", "Nmb", "Nmu", "Ucn"), order = T, pt.size = 2, ncol = 6, max.cutoff = "q80")
genestomas2 <- FeaturePlot(lc.combined, features = c("Gal", "Calca", "Hcrt", "Cck", "Crh", "Ghrhr", "Kiss1", "Pomc", "Pmch", "Npy", "Nts", "Penk", "Pdyn", "Pnoc", "Oxt", "Sst", "Grp", "Cartpt", "Tac1","Tac2", "Tac3", "Trh", "Vip", "Avp", "Rln1", "Qrfp", "Npvf", "Adcyap1", "Bdnf", "Nms", "Nmb", "Nmu", "Ucn"), order = T,pt.size = 1, ncol = 6, max.cutoff = "q80")
cowplot::save_plot(filename = 'FeaturePlot_genes_tomas_NP.pdf',
plot = genestomas2,
base_height = 10,
base_asp = 1.6)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "SCT"
FeaturePlot(lc.combined, slot = "scale.data", features = c("Hcrtr1", "Sstr2", "Calcr", "Galr1"), order = T)
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combined) <- "integrated"
FeaturePlot(lc.combined, slot = "scale.data", features = c("Hcrtr1", "Sstr2", "Calcr", "Galr1", "Scrt2"), order = T)
lc.combined1 <- PrepSCTFindMarkers(lc.combined)
nephr.markers.std <- FindAllMarkers(lc.combined1, assay = "SCT", verbose = FALSE)
nephr.markers.ROC <- FindAllMarkers(lc.combined1, assay = "SCT", test.use = "roc", verbose = FALSE)
nephr.markers <- FindConservedMarkers(lc.combined1, assay = "SCT",
ident.1 = "1", grouping.var = "id",
verbose = FALSE)
head(nephr.markers, 10)
plots <- VlnPlot(lc.combined1, features = rownames(nephr.markers)[1:10], split.by = "id",
group.by = "seurat_clusters", pt.size = 0, combine = FALSE)
wrap_plots(plots = plots, ncol = 1)
FeaturePlot(lc.combined1,
features = rownames(nephr.markers)[1:10],
split.by = "id", max.cutoff = 3,
order = FALSE, # here it's more convincing
cols = c("#C0C9D1", "#801C29"))
nephr.markers.std %>%
group_by(cluster) %>%
top_n(n = 10, wt = avg_log2FC) -> top10
DoHeatmap(lc.combined1, features = top10$gene) + NoLegend()
heatmapneur <- DoHeatmap(lc.combined1, features = top10$gene) + NoLegend()
cowplot::save_plot(filename = 'Heatmap_markers_neurons.pdf',
plot = heatmapneur,
base_height = 10,
base_asp = 1.6)
nephr.markers.std %>%
group_by(cluster) %>%
top_n(n = 3, wt = avg_log2FC) -> top3
DotPlot(lc.combined1,features = c("Gad1", "Slc32a1", "Slc17a6", "Slc17a7", unique(top3$gene)))+ RotatedAxis()
DPmarkers <- DotPlot(lc.combined1,features = c("Gad1", "Slc32a1", "Slc17a6", unique(top3$gene)))+ RotatedAxis()
cowplot::save_plot(filename = 'Dotplot_markers_neurons.pdf',
plot = DPmarkers,
base_height = 7,
base_asp = 2.2)
nephr.markers.ROC %>%
group_by(cluster) %>%
top_n(n = 10, wt = power) -> top10
DoHeatmap(lc.combined1, features = top10$gene) + NoLegend()
nephr.markers.ROC %>%
group_by(cluster) %>%
top_n(n = 5, wt = power) -> top5r
DPmarkers <- DotPlot(lc.combined1,features = unique(top5r$gene))+ RotatedAxis()
cowplot::save_plot(filename = 'Dotplot_markers_neurons.pdf',
plot = DPmarkers,
base_height = 7,
base_asp = 3.5)
DefaultAssay(lc.combined) <- "integrated"
lc.combinedTH <- subset(lc.combined, idents = 1)
lc.combinedTH <- FindNeighbors(lc.combinedTH, reduction = "pca", dims = 1:30, n.trees = 200, annoy.metric = "cosine", verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 1, verbose = FALSE) %>%
RunUMAP( dims = 1:30, verbose = FALSE)
DimHeatmap(lc.combinedTH, dims = 1:20, cells = 82, balanced = TRUE)
FeaturePlot(lc.combinedTH, slot = "scale.data", features = c("Phox2a", "Phox2b", "Eya1", "Eya2"), order = T)
DimPlot(lc.combinedTH, reduction = "umap", pt.size = 3)
GroupsNELC <- DimPlot(lc.combinedTH, reduction = "umap", pt.size = 3)
cowplot::save_plot(filename = 'DimPlot_groupsLC.pdf',
plot = GroupsNELC,
base_height = 7,
base_asp = 2)
DimPlot(lc.combinedTH, reduction = "umap", pt.size = 3, split.by = "id")
# For performing differential expression after integration, we switch back to the original
# data
DefaultAssay(lc.combinedTH) <- "SCT"
FeaturePlot(lc.combinedTH, slot = "scale.data", features = c("Gal", "Grp", "Sst", "Slc17a6", "Pdyn", "Cartpt", "Bdnf", "Th", "Slc18a2", "Dbh", "Scgn", "Slc6a2", "Calca", "Calcr", "Phox2a", "Phox2b", "Eya1", "Eya2", "Galr1", "Hcrtr1"), order = T, pt.size = 2, max.cutoff = "q80")
GenesLCNE <- FeaturePlot(lc.combinedTH, slot = "scale.data", features = c("Gal", "Grp", "Sst", "Slc17a6", "Pdyn", "Cartpt", "Bdnf", "Th", "Slc18a2", "Dbh", "Gad1", "Slc6a2", "Calca", "Calcr", "Phox2a", "Phox2b", "Eya1", "Eya2", "Galr1", "Hcrtr1"), order = T, pt.size = 2, max.cutoff = "q80")
cowplot::save_plot(filename = 'FeaturePlot_genesLCNEsct.pdf',
plot = GenesLCNE,
base_height = 10,
base_asp = 1.4)
# For performing diff
erential expression after integration, we switch back to the original
lc.combined
table(lc.combined$id)
table(lc.combinedTH)
table(Idents(lc.combinedTH))
janitor::tabyl(lc.combinedTH@meta.data, "id", "seurat_clusters")
janitor::tabyl(lc.combinedTH@meta.data, id, seurat_clusters)
lc.combinedTH
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(
lc.combined,
features = c(
"Gja1",
"Gja2",
"Gja3",
"Gja4",
"Gja5",
"Gjb1",
"Gjb2",
"Gjb3",
"Gjb4",
"Gjb5",
"Gjb6",
"Gjc1",
"Gjc2",
"Gjd2",
"Gje1"
),
order = T,
pt.size = 2,
ncol = 4,
max.cutoff = "q80"
)
DefaultAssay(lc.combined) <- "RNA"
FeaturePlot(
lc.combined,
features = c(
"Gja1",
"Gja2",
"Gja3",
"Gja4",
"Gja5",
"Gjb1",
"Gjb2",
"Gjb3",
"Gjb4",
"Gjb5",
"Gjb6",
"Gjc1",
"Gjc2",
"Gjd2",
"Gje1"
),
order = T,
pt.size = 1,
ncol = 3,
max.cutoff = "q80"
)
DefaultAssay(lc.combined) <- "RNA"
gj1 <- FeaturePlot(
lc.combined,
features = c(
"Gja1",
"Gja2",
"Gja3",
"Gja4",
"Gja5",
"Gja8",
"Gja9",
"Gja10",
"Gjb1",
"Gjb2",
"Gjb3",
"Gjb4",
"Gjb5",
"Gjb6",
"Gjb7",
"Gjc1",
"Gjc2",
"Gjc3",
"Gjd2",
"Gjd3",
"Gjd4",
"Gje1",
),
order = T,
pt.size = 1,
ncol = 3,
max.cutoff = "q80"
)
DefaultAssay(lc.combined) <- "RNA"
gj1 <- FeaturePlot(
lc.combined,
features = c(
"Gja1",
"Gja2",
"Gja3",
"Gja4",
"Gja5",
"Gja8",
"Gja9",
"Gja10",
"Gjb1",
"Gjb2",
"Gjb3",
"Gjb4",
"Gjb5",
"Gjb6",
"Gjb7",
"Gjc1",
"Gjc2",
"Gjc3",
"Gjd2",
"Gjd3",
"Gjd4",
"Gje1"
),
order = T,
pt.size = 1,
ncol = 3,
max.cutoff = "q80"
)
cowplot::save_plot(filename = 'FeaturePlot-GJP_1.pdf',
plot = gj1,
base_height = 12,
base_asp = 1.618)
gj1
DefaultAssay(lc.combinedTH) <- "RNA"
gj2 <- FeaturePlot(
lc.combinedTH,
features = c(
"Gja1",
"Gja2",
"Gja3",
"Gja4",
"Gja5",
"Gja8",
"Gja9",
"Gja10",
"Gjb1",
"Gjb2",
"Gjb3",
"Gjb4",
"Gjb5",
"Gjb6",
"Gjb7",
"Gjc1",
"Gjc2",
"Gjc3",
"Gjd2",
"Gjd3",
"Gjd4",
"Gje1"
),
order = T,
pt.size = 1,
ncol = 3,
max.cutoff = "q80"
)
cowplot::save_plot(filename = 'FeaturePlot-GJP_TH.pdf',
plot = gj2,
base_height = 12,
base_asp = 1.618)
gj2
DefaultAssay(lc.combinedTH) <- "RNA"
cckr2 <- FeaturePlot(
lc.combinedTH,
features = c(
"Gpr173",
"Cckar",
"Cckbr"
),
order = T,
pt.size = 1,
ncol = 3,
max.cutoff = "q80"
)
cckr2
cckr2
cckr2
cckr2
cowplot::save_plot(filename = 'FeaturePlot-cckr_TH.pdf',
plot = cckr2,
base_height = 7,
base_asp = 5)
cckr2 <- FeaturePlot(
lc.combinedTH,
features = c(
"Gpr173",
"Cckar",
"Cckbr"
),
order = T,
pt.size = 3,
ncol = 3,
max.cutoff = "q80"
)
cowplot::save_plot(filename = 'FeaturePlot-cckr_TH.pdf',
plot = cckr2,
base_height = 7,
base_asp = 5)
DefaultAssay(lc.combined) <- "RNA"
cckr1 <- FeaturePlot(
lc.combined,
features = c(
"Gpr173",
"Cckar",
"Cckbr"
),
order = T,
pt.size = 1.5,
ncol = 3,
max.cutoff = "q80"
)
cowplot::save_plot(filename = 'FeaturePlot-cckr.pdf',
plot = cckr1,
base_height = 7,
base_asp = 5)
cckr1
